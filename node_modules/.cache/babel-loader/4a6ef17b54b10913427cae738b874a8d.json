{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Well\\\\Documents\\\\monster-webapp\\\\src\\\\components\\\\ErrorBoundry.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true\n    });\n  }\n\n  render() {\n    const {\n      hasError\n    } = this.state;\n\n    if (hasError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Error... please contact the support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundry;","map":{"version":3,"sources":["C:/Users/Well/Documents/monster-webapp/src/components/ErrorBoundry.js"],"names":["React","Component","ErrorBoundry","constructor","props","state","hasError","componentDidCatch","error","info","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,IAAR,EAAa;AAC1B,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAACL,MAAAA;AAAD,QAAa,KAAKD,KAAxB;;AACA,QAAIC,QAAJ,EAAa;AACT,0BACI;AAAA,+BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AACD,WAAO,KAAKF,KAAL,CAAWQ,QAAlB;AACH;;AAtBgC;;AAyBrC,eAAeV,YAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    \r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError: true })\r\n    }\r\n    \r\n    render() {\r\n        const {hasError} = this.state\r\n        if (hasError){\r\n            return (\r\n                <div>\r\n                   <h1>Error... please contact the support</h1> \r\n                </div>\r\n            );\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;"]},"metadata":{},"sourceType":"module"}