{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Well\\\\Documents\\\\monster-webapp\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport SearchField from \"../components/SearchField\";\nimport Cardlist from \"../components/Cardlist\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport { setSearchField } from \"../actions.jsx\"; // mapStateToProps, mapDispatchToProps\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchField\n  };\n}; //Trigger the action - send actions\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nfunction App(state) {\n  _s();\n\n  // Define the value status\n  const [users, setUsers] = useState([]); // const [searchField, setSearchField] = useState(\"\")\n  // Grab the users from an online Json\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json()).catch(e => console.log(\"Check out this http path\", e)).then(users => setUsers(users));\n  }, []); // Compare the username with the name provided within the search field\n\n  const searchMonster = users.filter(userData => {\n    return userData.username.toLowerCase().includes(state.searchField.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"f1\",\n      children: \"Monsters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchField, {\n      runQUery: state.onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n        children: /*#__PURE__*/_jsxDEV(Cardlist, {\n          users: searchMonster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = App;\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Well/Documents/monster-webapp/src/containers/App.js"],"names":["React","useState","useEffect","connect","SearchField","Cardlist","Scroll","ErrorBoundry","setSearchField","mapStateToProps","state","searchField","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","users","setUsers","fetch","then","res","json","catch","e","console","log","searchMonster","filter","userData","username","toLowerCase","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,cAAT,QAA+B,gBAA/B,C,CAEA;;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEC,IAAAA,WAAW,EAAED,KAAK,CAACC;AAArB,GAAP;AACD,CAFD,C,CAGA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACL,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD9B,GAAP;AAGD,CAJD;;AAMA,SAASC,GAAT,CAAaR,KAAb,EAAoB;AAAA;;AAClB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC,CAFkB,CAGlB;AAEA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGC,KAFH,CAEUC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,CAAxC,CAFhB,EAGGJ,IAHH,CAGSH,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAH3B;AAID,GALQ,EAKN,EALM,CAAT,CANkB,CAalB;;AACA,QAAMU,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAcC,QAAD,IAAc;AAC/C,WAAOA,QAAQ,CAACC,QAAT,CACJC,WADI,GAEJC,QAFI,CAEKxB,KAAK,CAACC,WAAN,CAAkBsB,WAAlB,EAFL,CAAP;AAGD,GAJqB,CAAtB;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEvB,KAAK,CAACI;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA,6BACE,QAAC,YAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEe;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA/BQX,G;;KAAAA,G;AAiCT,eAAef,OAAO,CAACM,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport SearchField from \"../components/SearchField\"\r\nimport Cardlist from \"../components/Cardlist\"\r\nimport Scroll from \"../components/Scroll\"\r\nimport ErrorBoundry from \"../components/ErrorBoundry\"\r\nimport { setSearchField } from \"../actions.jsx\"\r\n\r\n// mapStateToProps, mapDispatchToProps\r\nconst mapStateToProps = (state) => {\r\n  return { searchField: state.searchField }\r\n}\r\n//Trigger the action - send actions\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n  }\r\n}\r\n\r\nfunction App(state) {\r\n  // Define the value status\r\n  const [users, setUsers] = useState([])\r\n  // const [searchField, setSearchField] = useState(\"\")\r\n\r\n  // Grab the users from an online Json\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => res.json())\r\n      .catch((e) => console.log(\"Check out this http path\", e))\r\n      .then((users) => setUsers(users))\r\n  }, [])\r\n\r\n  // Compare the username with the name provided within the search field\r\n  const searchMonster = users.filter((userData) => {\r\n    return userData.username\r\n      .toLowerCase()\r\n      .includes(state.searchField.toLowerCase())\r\n  })\r\n\r\n  return (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1\">Monsters</h1>\r\n      <SearchField runQUery={state.onSearchChange} />\r\n      <Scroll>\r\n        <ErrorBoundry>\r\n          <Cardlist users={searchMonster} />\r\n        </ErrorBoundry>\r\n      </Scroll>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n"]},"metadata":{},"sourceType":"module"}