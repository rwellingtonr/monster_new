{"version":3,"sources":["reportWebVitals.js","components/SearchField.js","components/Card.js","components/Cardlist.js","components/Scroll.js","components/ErrorBoundry.js","constants.jsx","containers/App.js","containers/connect.js","actions.jsx","reducers.jsx","containers/middleware.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchField","runQUery","className","placeholder","type","onChange","Card","id","username","email","alt","src","onClick","alert","Cardlist","users","cardContent","map","user","i","style","height","Scroll","props","overflow","border","scrollbarWidth","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","CHANGE_SEARCHFIELD","REQUEST_MONSTERS_PENDING","REQUEST_MONSTERS_SUCCESS","REQUEST_MONSTERS_FAILED","connect","searchField","searchMonsters","monsters","requestMonsters","isPending","dispatch","onSearchChange","event","text","target","value","payload","onRequestMonsters","fetch","res","json","data","catch","e","useEffect","document","title","searchMonster","filter","userData","toLowerCase","includes","initialStateSearch","initialStateMonsters","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e51b047a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\"\r\n\r\nconst SearchField = ({ runQUery }) => {\r\n  return (\r\n    <div className=\"pa3\">\r\n      <input\r\n        className=\"pa3 ba b--black-80 bg-light-gray\"\r\n        placeholder=\"Search\"\r\n        type=\"search\"\r\n        onChange={runQUery}\r\n      ></input>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchField\r\n","import React from \"react\"\r\n\r\nconst Card = ({ id, username, email }) => {\r\n  return (\r\n    <div className=\"bg-light-gray dib br3 pa2 ma2 grow\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${id}?set=set2`}\r\n        onClick={() => alert(username)}\r\n      />\r\n      <div>\r\n        <h2>{username}</h2>\r\n        <h5>{email}</h5>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\"\r\nimport Card from \"./Card\"\r\n\r\nconst Cardlist = ({ users }) => {\r\n  const cardContent = users.map((user, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        id={users[i].id}\r\n        username={users[i].username}\r\n        email={users[i].email}\r\n      />\r\n    )\r\n  })\r\n  return (\r\n    <div>\r\n      {cardContent}\r\n      <div style={{ height: \"5vh\" }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cardlist\r\n","import React from \"react\"\r\n\r\nconst Scroll = (props) => {\r\n  const scrollStyle = {\r\n    overflow: \"scroll\",\r\n    border: \"1px solid white\",\r\n    height: \"75vh\",\r\n    scrollbarWidth: \"none\",\r\n  }\r\n\r\n  return <div style={scrollStyle}>{props.children};</div>\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    \r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError: true })\r\n    }\r\n    \r\n    render() {\r\n        const {hasError} = this.state\r\n        if (hasError){\r\n            return (\r\n                <div>\r\n                   <h1>Error... please contact the support</h1> \r\n                </div>\r\n            );\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","//Const check if the redux should take this action\r\nexport const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\"\r\n\r\n// First time\r\nexport const REQUEST_MONSTERS_PENDING = \"REQUEST_MONSTERS_PENDING\"\r\n// Success\r\nexport const REQUEST_MONSTERS_SUCCESS = \"REQUEST_MONSTERS_SUCCESS\"\r\n// Failed\r\nexport const REQUEST_MONSTERS_FAILED = \"REQUEST_MONSTERS_FAILED\"\r\n","import React, { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport SearchField from \"../components/SearchField\"\r\nimport Cardlist from \"../components/Cardlist\"\r\nimport Scroll from \"../components/Scroll\"\r\nimport ErrorBoundry from \"../components/ErrorBoundry\"\r\nimport { mapDispatchToProps, mapStateToProps } from \"./connect\"\r\n\r\nfunction App(state) {\r\n  // Grab the users from an online Json\r\n  useEffect(() => {\r\n    document.title = \"Monster Cards\"\r\n    // Call the function inside of mapDispatchToProps\r\n    state.onRequestMonsters()\r\n  }, [])\r\n\r\n  // Destructuring the props inside the state obj.\r\n  const { monsters, isPending, searchField, onSearchChange } = state\r\n\r\n  // Compare the username with the name provided within the search field\r\n  const searchMonster = monsters.filter((userData) => {\r\n    return userData.username.toLowerCase().includes(searchField.toLowerCase())\r\n  })\r\n\r\n  return isPending ? (\r\n    <h1 className=\"tc\">Loading...</h1>\r\n  ) : (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1\">Monsters</h1>\r\n      <SearchField runQUery={onSearchChange} />\r\n      <Scroll>\r\n        <ErrorBoundry>\r\n          <Cardlist users={searchMonster} />\r\n        </ErrorBoundry>\r\n      </Scroll>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import { requestMonsters, setSearchField } from \"../actions.jsx\"\r\n\r\nexport const mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchMonsters.searchField,\r\n    monsters: state.requestMonsters.monsters,\r\n    isPending: state.requestMonsters.isPending,\r\n    error: state.requestMonsters.error,\r\n  }\r\n}\r\n//Trigger the action - send actions\r\nexport const mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestMonsters: () => requestMonsters(dispatch),\r\n  }\r\n}\r\n","import {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_MONSTERS_PENDING,\r\n  REQUEST_MONSTERS_SUCCESS,\r\n  REQUEST_MONSTERS_FAILED,\r\n} from \"./constants.jsx\"\r\n\r\n// define a type and the payload\r\nexport const setSearchField = (text) => ({\r\n  type: CHANGE_SEARCHFIELD,\r\n  payload: text,\r\n})\r\n//return a function, by this reason it needs the Dispatch\r\n// this function should load intead componentDidMount\r\nexport const requestMonsters = (dispatch) => {\r\n  dispatch({ type: REQUEST_MONSTERS_PENDING })\r\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then((res) => res.json())\r\n    .then((data) => dispatch({ type: REQUEST_MONSTERS_SUCCESS, payload: data }))\r\n    .catch((e) => dispatch({ type: REQUEST_MONSTERS_FAILED, payload: e }))\r\n}\r\n","import {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_MONSTERS_PENDING,\r\n  REQUEST_MONSTERS_SUCCESS,\r\n  REQUEST_MONSTERS_FAILED,\r\n} from \"./constants.jsx\"\r\n\r\n//the initial state for search field\r\nconst initialStateSearch = {\r\n  searchField: \"\",\r\n}\r\nconst initialStateMonsters = {\r\n  isPending: false,\r\n  monsters: [],\r\n  error: \"\",\r\n}\r\n\r\n// This reducer runs a query to search the typed monster in the cards\r\nexport const searchMonsters = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCHFIELD:\r\n      return { ...state, searchField: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// this reducer should\r\nexport const requestMonsters = (state = initialStateMonsters, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_MONSTERS_PENDING:\r\n      return { ...state, isPending: true }\r\n\r\n    case REQUEST_MONSTERS_SUCCESS:\r\n      return { ...state, monsters: action.payload, isPending: false }\r\n\r\n    case REQUEST_MONSTERS_FAILED:\r\n      return { ...state, error: action.payload, isPending: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\"\r\nimport { createLogger } from \"redux-logger\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { searchMonsters, requestMonsters } from \"../reducers\"\r\n\r\n// Logger will help you to Debuggin the app\r\nconst logger = createLogger()\r\n// combine reducers\r\nconst rootReducer = combineReducers({ searchMonsters, requestMonsters })\r\n\r\n//  Create a store using redux\r\nexport const store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunkMiddleware, logger)\r\n)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\nimport { Provider } from \"react-redux\"\r\n// Style\r\nimport \"./containers/index.css\"\r\nimport \"tachyons\"\r\n//import from container\r\nimport App from \"./containers/App\"\r\nimport { store } from \"./containers/middleware\"\r\n\r\nReactDOM.render(\r\n  // Provider will be responsible to provide all the Redux proprieties to its chields\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}